{"version":3,"sources":["utils/routesConst.js","http/index.js","http/authAPI.js","utils/actionsConst.js","actions/error.js","helpers/inputValidation.js","pages/Auth/index.js","actions/auth.js","components/Preloader/index.js","googleKey.js","components/Map/Marker.js","components/Map/index.js","http/wifiPointAPI.js","actions/wifiPoints.js","components/PointFilter/index.js","components/Modals/ConfirmModal/index.js","components/Modals/UpdatePoint/index.js","components/PointsList/PointItem.js","components/PointsList/index.js","pages/Home/index.js","components/Modals/CreatePoint/index.js","pages/Points/index.js","routes.js","components/AppRouter.js","components/Header/index.js","components/ErrorMessage/index.js","App.js","reducers/error.js","reducers/user.js","reducers/wifiPoint.js","store.js","index.js"],"names":["LOGIN_ROUTE","REGISTRATION_ROUTE","HOME_ROUTE","POINT_ROUTE","apiUrl","$host","axios","create","baseURL","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","registration","registrationData","a","post","data","response","login","loginData","check","LOGIN","CHECK","LOGOUT","CREATE_POINT","UPDATE_POINT","DELETE_POINT","GET_ALL_POINTS","SET_ERROR","REMOVE_ERROR","showError","type","setError","dispatch","setTimeout","inputValidation","value","validationTypes","email","test","String","toLowerCase","password","length","string","actions","authData","authAPI","success","console","log","message","setItem","token","user","connect","bindActionCreators","history","useHistory","isLogin","useLocation","pathname","useState","setEmail","setPassword","confirmPass","setConfirmPass","className","Container","Input","placeholder","onChange","e","target","Button","onClick","then","res","push","to","Preloader","Segment","Dimmer","active","Loader","API_KEY","Marker","text","Map","width","height","points","filterRadius","center","lat","lng","style","bootstrapURLKeys","key","defaultCenter","coordinates","defaultZoom","map","point","location","_id","createData","update","id","updateData","put","remove","delete","getAll","get","filter","filterData","setAllPoints","removeDeletedPoint","getAllPoints","wifiPointAPI","filterPoints","setFilterMarker","isOpen","setIsOpen","address","setAddress","undefined","setCoordinates","place","setPlace","radius","setRadius","name","setName","speed","setSpeed","setType","frequency","setFrequency","Icon","Form","changeAddress","apiKey","onPlaceSelected","formatted_address","geometry","placeHandler","options","types","componentRestrictions","country","Group","inline","Radio","label","checked","ConfirmModal","open","close","confirmCb","Modal","onClose","Content","Actions","color","updatePoint","error","Header","Description","deletePoint","isAdmin","editPoint","openDeleteModal","setOpenDeleteModal","openUpdateModal","setOpenUpdateModal","PointsList","withLabel","wifiPoint","loading","setLoading","setFilterRadius","useEffect","finally","createPoint","openCreateForm","setOpenCreateForm","publicRoutes","path","ROUTE","Component","Auth","Home","authRoutes","Points","isAuth","component","exact","logout","removeItem","ErrorMessage","Message","checkAuth","isError","defaultState","middlewares","thunk","composedEnhancers","compose","applyMiddleware","reducers","state","action","role","rootReducer","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"0cAAaA,EAAc,SACdC,EAAqB,YACrBC,EAAa,IACbC,EAAc,U,sECArBC,EAAS,0BAETC,EAAQC,IAAMC,OAAO,CACvBC,QAASJ,IAGPK,EAAYH,IAAMC,OAAO,CAC3BC,QAASJ,IAQbK,EAAUC,aAAaC,QAAQC,KALP,SAAAC,GAEpB,OADAA,EAAOC,QAAQC,cAAf,iBAAyCC,aAAaC,QAAQ,UACvDJ,KCbJ,IAAMK,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,+EAECf,EAAMgB,KAAK,oBAAqBF,GAFjC,uBAEbG,EAFa,EAEbA,KAFa,kBAGbA,GAHa,uCAKbA,EAAQ,KAAEC,SAAVD,KALa,kBAMbA,GANa,yDAAH,sDAUZE,EAAK,uCAAG,WAAOC,GAAP,mBAAAL,EAAA,+EAEQf,EAAMgB,KAAK,iBAAkBI,GAFrC,uBAENH,EAFM,EAENA,KAFM,kBAGNA,GAHM,uCAKNA,EAAQ,KAAEC,SAAVD,KALM,kBAMNA,GANM,yDAAH,sDAULI,EAAK,uCAAG,gCAAAN,EAAA,+EAEQX,EAAUY,KAAK,kBAFvB,uBAENC,EAFM,EAENA,KAFM,kBAGNA,GAHM,uCAKNA,EAAQ,KAAEC,SAAVD,KALM,kBAMNA,GANM,yDAAH,qDCrBLK,EAAQ,aAERC,EAAQ,aACRC,EAAS,cAGTC,EAAe,oBACfC,EAAe,oBACfC,EAAe,oBACfC,EAAiB,sBAGjBC,EAAY,kBACZC,EAAe,qBCZtBC,EAAY,SAAAd,GAAI,MAAK,CACvBe,KAAMH,EACNZ,SAOSgB,EAAW,SAAAhB,GAAI,8CAAI,WAAMiB,GAAN,SAAAnB,EAAA,sDAC5BmB,EAASH,EAAUd,IAEnBkB,YAAW,WACPD,EARiB,CACrBF,KAAMF,MAQH,MALyB,2CAAJ,uDCXfM,EAAkB,SAACJ,EAAMK,GAClC,OAAOC,EAAgBN,GAAMK,IAG3BC,EAAkB,CACpB,MAAS,SAACC,GAEN,MADS,wIACCC,KAAKC,OAAOF,GAAOG,gBAEjC,SAAY,SAACC,GACT,OAAOA,EAASC,OAAS,GAAKD,EAASC,OAAS,IAEpD,OAAU,SAACC,GACP,OAAOA,EAAOD,OAAS,I,gBCmFzBE,EAAU,CACZjC,aC3EwB,SAAAkC,GAAQ,8CAAI,WAAMb,GAAN,eAAAnB,EAAA,sEACbiC,EAAqBD,GADR,WAC9B7B,EAD8B,QAGtB+B,QAHsB,uBAIhCC,QAAQC,IAAIjC,GAJoB,kBAKzBgB,EAASD,EAASf,EAASkC,WALF,iCAQ7B,GAR6B,2CAAJ,uDD4EhCjC,MCjEiB,SAAA4B,GAAQ,8CAAI,WAAMb,GAAN,eAAAnB,EAAA,sEACNiC,EAAcD,GADR,WACvB7B,EADuB,QAGf+B,QAHe,yCAIlBf,EAASD,EAASf,EAASkC,WAJT,cAO7BzC,aAAa0C,QAAQ,QAASnC,EAASoC,OACvCpB,GAjCgBjB,EAiCKC,EAASqC,KAjCL,CAC1BvB,KAAMV,EACNL,UAuB8B,mBAStB,GATsB,iCAzBb,IAAAA,IAyBa,OAAJ,uDDkEzBgB,YAKWuB,cACX,MAHuB,SAAAtB,GAAQ,OAAIuB,YAAmBX,EAASZ,KAEpDsB,EA3FF,SAAC,GAIP,IAHH3C,EAGE,EAHFA,aACAM,EAEE,EAFFA,MACAc,EACE,EADFA,SAEMyB,EAAUC,cAEVC,EADWC,cACQC,WAAanE,EAEtC,EAA0BoE,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcyB,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiBsB,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAwBA,OACI,qBAAKC,UAAU,OAAf,SACI,eAACC,EAAA,EAAD,CAAWD,UAAU,OAArB,UACI,iCACI,6BAAKR,EAAU,gBAAkB,iBACjC,cAACU,EAAA,EAAD,CACIC,YAAY,QACZlC,MAAOE,EACPiC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOrC,UAErC,cAACiC,EAAA,EAAD,CACIC,YAAY,WACZvC,KAAK,WACLK,MAAOM,EACP6B,SAAU,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,OAAOrC,UAEtCuB,GACF,cAACU,EAAA,EAAD,CACIC,YAAY,mBACZvC,KAAK,WACLK,MAAO6B,EACPM,SAAU,SAAAC,GAAC,OAAIN,EAAeM,EAAEC,OAAOrC,UAG3C,cAACsC,EAAA,EAAD,CAAQ3C,KAAK,SAAS4C,QA9ClB,WAChB,OAAKxC,EAAgB,QAASG,GAIzBH,EAAgB,WAAYO,QAI7BiB,EACAzC,EAAM,CAAEoB,QAAOI,aACVkC,MAAK,SAAAC,GAAG,OAAIA,GAAOpB,EAAQqB,KAAKlF,MAEjC8C,IAAauB,EACbrD,EAAa,CAAE0B,QAAOI,aACjBkC,MAAK,SAAAC,GAAG,OAAIA,GAAOpB,EAAQqB,KAAKpF,MAErCsC,EAAS,uBAXNA,EAAS,+BAJTA,EAAS,qBA4CR,SAA8C2B,EAAU,UAAY,oBAExE,qBAAKQ,UAAU,WAAf,SACKR,EACG,+CACgB,cAAC,IAAD,CAASoB,GAAIpF,EAAb,0BAGhB,2DAC4B,cAAC,IAAD,CAASoF,GAAIrF,EAAb,mC,2BEnErCsF,G,OAVG,WACd,OACI,cAACC,EAAA,EAAD,CAASd,UAAU,YAAnB,SACI,cAACe,EAAA,EAAD,CAAQC,QAAM,EAAd,SACI,cAACC,EAAA,EAAD,U,SCRHC,EAAU,0CCaRC,EAVA,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,UAAsB,EAAXoB,KACzB,OACI,qBAAKpB,UAAWA,EAAS,iBAAaA,GAAc,YC8C7CqB,G,OA5CH,SAAC,GAKN,IAJHC,EAIE,EAJFA,MACAC,EAGE,EAHFA,OACAC,EAEE,EAFFA,OACAC,EACE,EADFA,aAEMC,EAAS,CACXC,IAAK,QACLC,IAAK,WAIT,OADA9C,QAAQC,IAAI0C,GAER,qBAAKzB,UAAU,MAAM6B,MAAO,CAAEN,OAAQA,EAAQD,MAAOA,GAArD,SACI,cAAC,IAAD,CACIQ,iBAAkB,CAAEC,IAAKb,GACzBc,cAAeN,EACfA,OAAQD,EAAeA,EAAaQ,YAAcP,EAClDQ,YARC,GAIL,SAMMV,EAAOhD,QACLgD,EAAOW,KAAI,SAAAC,GAAK,OACZ,cAAC,EAAD,CAEIT,IAAKS,EAAMC,SAASJ,YAAY,GAChCL,IAAKQ,EAAMC,SAASJ,YAAY,IAF3BG,EAAME,c,sCC5B1BxG,GAAM,uCAAG,WAAOyG,GAAP,mBAAA5F,EAAA,+EAEOX,EAAUY,KAAK,WAAY2F,GAFlC,uBAEP1F,EAFO,EAEPA,KAFO,kBAGPA,GAHO,uCAKPA,EAAQ,KAAEC,SAAVD,KALO,kBAMPA,GANO,yDAAH,sDAUN2F,GAAM,uCAAG,WAAOC,EAAIC,GAAX,mBAAA/F,EAAA,+EAEOX,EAAU2G,IAAV,mBAA0BF,GAAMC,GAFvC,uBAEP7F,EAFO,EAEPA,KAFO,kBAGPA,GAHO,uCAKPA,EAAQ,KAAEC,SAAVD,KALO,kBAMPA,GANO,yDAAH,wDAUN+F,GAAM,uCAAG,WAAOH,GAAP,mBAAA9F,EAAA,+EAEOX,EAAU6G,OAAV,mBAA6BJ,IAFpC,uBAEP5F,EAFO,EAEPA,KAFO,kBAGPA,GAHO,uCAKPA,EAAQ,KAAEC,SAAVD,KALO,kBAMPA,GANO,yDAAH,sDAUNiG,GAAM,uCAAG,gCAAAnG,EAAA,+EAEOf,EAAMmH,IAAI,YAFjB,uBAEPlG,EAFO,EAEPA,KAFO,kBAGPA,GAHO,uCAKPA,EAAQ,KAAEC,SAAVD,KALO,kBAMPA,GANO,yDAAH,qDAUNmG,GAAM,uCAAG,WAAMC,GAAN,mBAAAtG,EAAA,+EAEOf,EAAMgB,KAAK,kBAAmBqG,GAFrC,uBAEPpG,EAFO,EAEPA,KAFO,kBAGPA,GAHO,uCAKPA,EAAQ,KAAEC,SAAVD,KALO,kBAMPA,GANO,yDAAH,sDCvBbqG,GAAe,SAAArG,GAAI,MAAK,CAC1Be,KAAMJ,EACNX,SAGEsG,GAAqB,SAAAV,GAAE,MAAK,CAC9B7E,KAAML,EACNkF,OAiCSW,GAAe,yDAAM,WAAMtF,GAAN,eAAAnB,EAAA,sEACP0G,KADO,WACxBvG,EADwB,QAGhB+B,QAHgB,yCAInBf,EAASD,EAASf,EAASkC,WAJR,OAO9BlB,EAASoF,GAAapG,EAAS0E,SAPD,2CAAN,uDC4HtB9C,I,OAAU,CAAE4E,aDlHU,SAAAL,GAAU,8CAAI,WAAMnF,GAAN,eAAAnB,EAAA,sEACf0G,GAAoBJ,GADL,WAChCnG,EADgC,QAGxB+B,QAHwB,yCAI3Bf,EAASD,EAASf,EAASkC,WAJA,OAOtClB,EAASoF,GAAapG,EAAS0E,SAPO,2CAAJ,uDCkHN3D,WAAUuF,kBAI3BhE,eACX,MAHuB,SAAAtB,GAAQ,OAAIuB,YAAmBX,GAASZ,KAEpDsB,EAhLK,SAAC,GAKd,IAJHkE,EAIE,EAJFA,aACAzF,EAGE,EAHFA,SACAuF,EAEE,EAFFA,aACAG,EACE,EADFA,gBAEA,EAA4B5D,oBAAS,GAArC,mBAAO6D,EAAP,KAAeC,EAAf,KACA,EAA8B9D,mBAAS,IAAvC,mBAAO+D,EAAP,KAAgBC,EAAhB,KACA,EAAsChE,wBAASiE,GAA/C,mBAAO3B,EAAP,KAAoB4B,EAApB,KACA,EAA0BlE,mBAAS,IAAnC,mBAAOmE,EAAP,KAAcC,EAAd,KACA,EAA4BpE,mBAAS,IAArC,mBAAOqE,EAAP,KAAeC,EAAf,KACA,EAAwBtE,mBAAS,IAAjC,mBAAOuE,EAAP,KAAaC,EAAb,KACA,EAA0BxE,mBAAS,IAAnC,mBAAOyE,EAAP,KAAcC,EAAd,KACA,EAAwB1E,mBAAS,OAAjC,mBAAO/B,EAAP,KAAa0G,EAAb,KACA,EAAkC3E,mBAAS,OAA3C,mBAAO4E,EAAP,KAAkBC,EAAlB,KA0DA,OACI,sBAAKxE,UAAU,cAAf,UACI,qBAAIQ,QAAS,kBAAMiD,GAAWD,IAA9B,UACI,0CACA,cAACiB,EAAA,EAAD,CAAMP,KAAMV,EAAS,WAAa,kBAEpCA,GACF,eAACkB,GAAA,EAAD,WACI,gCACI,cAAC,KAAD,CACIzG,MAAOyF,EACPtD,SAAU,SAACC,GAAD,OAnER,SAACqD,GACrBK,EAAS,IACTJ,EAAWD,GAiEwBiB,CAActE,EAAEC,OAAOrC,QACxC2G,OAAQ1D,EACR2D,gBAAiB,SAACf,GAAD,OAhEhB,SAACA,GAClB,IAAKA,EAAMgB,kBACP,OAAOjH,EAAS,mBAEpBkG,EAASD,GACTH,EAAWG,EAAMgB,mBACjBjB,EAAe,CACXlC,IAAKmC,EAAMiB,SAAS1C,SAASV,MAC7BC,IAAKkC,EAAMiB,SAAS1C,SAAST,QAwDWoD,CAAalB,IACzCmB,QAAS,CACLC,MAAO,CAAC,WACRC,sBAAuB,CAAEC,QAAS,SAG1C,cAAClF,EAAA,EAAD,CACItC,KAAK,SACLuC,YAAY,gBACZlC,MAAO+F,EACP5D,SAAU,SAACC,GAAD,OAAO4D,EAAU5D,EAAEC,OAAOrC,aAG5C,gCACI,cAACiC,EAAA,EAAD,CACIC,YAAY,UACZlC,MAAOiG,EACP9D,SAAU,SAACC,GAAD,OAAO8D,EAAQ9D,EAAEC,OAAOrC,UAEtC,cAACiC,EAAA,EAAD,CACItC,KAAK,SACLuC,YAAY,WACZlC,MAAOmG,EACPhE,SAAU,SAACC,GAAD,OAAOgE,EAAShE,EAAEC,OAAOrC,aAG3C,gCACI,eAACyG,GAAA,EAAKW,MAAN,CAAYC,QAAM,EAAlB,UACI,2CACA,cAACZ,GAAA,EAAKa,MAAN,CACIC,MAAM,MACNvH,MAAM,MACNwH,QAAkB,QAAT7H,EACTwC,SAAU,SAACC,GAAD,OAAOiE,EAAQ,UAE7B,cAACI,GAAA,EAAKa,MAAN,CACIC,MAAM,OACNvH,MAAM,OACNwH,QAAkB,SAAT7H,EACTwC,SAAU,SAACC,GAAD,OAAOiE,EAAQ,WAE7B,cAACI,GAAA,EAAKa,MAAN,CACIC,MAAM,SACNvH,MAAM,SACNwH,QAAkB,WAAT7H,EACTwC,SAAU,kBAAMkE,EAAQ,gBAGhC,eAACI,GAAA,EAAKW,MAAN,CAAYC,QAAM,EAAlB,UACI,mEACA,cAACZ,GAAA,EAAKa,MAAN,CACIC,MAAM,MACNvH,MAAM,MACNwH,QAAkB,QAAT7H,EACTwC,SAAU,SAACC,GAAD,OAAOiE,EAAQ,UAE7B,cAACI,GAAA,EAAKa,MAAN,CACIC,MAAM,MACNvH,MAAO,IACPwH,QAAuB,MAAdlB,EACTnE,SAAU,SAACC,GAAD,OAAOmE,EAAa,QAElC,cAACE,GAAA,EAAKa,MAAN,CACIC,MAAM,IACNvH,MAAO,EACPwH,QAAuB,IAAdlB,EACTnE,SAAU,kBAAMoE,EAAa,YAIzC,gCACI,cAACjE,EAAA,EAAD,CAAQ3C,KAAK,SAASoC,UAAU,SAASQ,QA3HpC,WACjB,IAAMwC,EAAS,CACXgB,SACAE,OACAE,QACAxG,KAAe,QAATA,EAAiBA,EAAO,GAC9B2G,UAAyB,QAAdA,EAAsBA,EAAY,IAGjD,OAAIb,IAAYI,EAAMgB,kBACXjH,EAAS,mBAGhBuG,EAAQ,GAAKA,EAAQ,IACdvG,EAAS,eAGhBiG,EAAMgB,oBACP9B,EAAOf,YAAcA,GAGxBsB,EAAgB,CAAEtB,cAAa+B,gBAC/BV,EAAaN,KAqGD,oBACA,cAACzC,EAAA,EAAD,CAAQ3C,KAAK,SAASoC,UAAU,QAAQQ,QAnGpC,WAChBmD,EAAW,IACXE,OAAeD,GACfG,EAAS,IACTE,EAAU,IACVE,EAAQ,IACRG,EAAQ,OACRE,EAAa,OAEbpB,IACAG,GAAgB,GAChBE,GAAU,IAwFE,+B,mBC/HLiC,I,OApCM,SAAC,GAKf,IAJHC,EAIE,EAJFA,KACAC,EAGE,EAHFA,MACAxE,EAEE,EAFFA,KACAyE,EACE,EADFA,UAOA,OACI,eAACC,GAAA,EAAD,CACI9F,UAAU,eACV2F,KAAMA,EACNI,QAASH,EAHb,UAKI,eAACE,GAAA,EAAME,QAAP,WACI,cAACvB,EAAA,EAAD,CAAMP,KAAK,iBACX,6BAAK9C,OAET,eAAC0E,GAAA,EAAMG,QAAP,WACI,cAAC1F,EAAA,EAAD,CAAQ2F,MAAM,QAAQ1F,QAhBZ,WAClBqF,IACAD,KAcQ,iBACA,cAACrF,EAAA,EAAD,CAAQ2F,MAAM,MAAM1F,QAASoF,EAA7B,wBCqHVlH,I,OAAU,CAAEyH,YH1GS,SAAC1D,EAAIC,GAAL,8CAAoB,WAAM5E,GAAN,eAAAnB,EAAA,sEACpB0G,GAAoBZ,EAAIC,GADJ,WACrC5F,EADqC,QAG7B+B,QAH6B,yCAIhCf,EAASD,EAASf,EAASkC,WAJK,OAO3ClB,GAhCoBjB,EAgCKC,EAASsF,MAhCL,CAC7BxE,KAAMN,EACNT,UAuB2C,iCAzBvB,IAAAA,IAyBuB,OAApB,yDG8GZuC,eACX,MAHuB,SAAAtB,GAAQ,OAAIuB,YAAmBX,GAASZ,KAEpDsB,EA1IK,SAAC,GAKd,IAJHuG,EAIE,EAJFA,KACAC,EAGE,EAHFA,MACAxD,EAEE,EAFFA,MACA+D,EACE,EADFA,YAEA,EAAwBxG,mBAASyC,EAAM8B,MAAvC,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAAsCxE,mBAASyC,EAAMH,aAArD,mBAAOA,EAAP,KAAoB4B,EAApB,KACA,EAA8BlE,mBAASyC,EAAMsB,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBhE,mBAASyC,EAAMxE,MAAvC,mBAAOA,EAAP,KAAa0G,EAAb,KACA,EAAgC3E,mBAASyC,EAAM7D,UAA/C,mBAAOA,EAAP,KAAiBsB,EAAjB,KACA,EAA0BF,mBAASyC,EAAMgC,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAkC1E,mBAASyC,EAAMmC,WAAjD,mBAAOA,EAAP,KAAkBC,EAAlB,KACA,EAA0B7E,oBAAS,GAAnC,mBAAOyG,EAAP,KAAcvI,EAAd,KAkCA,OACI,eAACiI,GAAA,EAAD,CACI9F,UAAU,cACV+F,QAASH,EACTD,KAAMA,EAHV,UAKI,cAACG,GAAA,EAAMO,OAAP,4BACA,cAACP,GAAA,EAAME,QAAP,UACI,eAACF,GAAA,EAAMQ,YAAP,WACMF,GAAS,qBAAKpG,UAAU,QAAf,SAAwBoG,IACnC,eAAC1B,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CACIC,YAAY,UACZlC,MAAOiG,EACP9D,SAAU,SAACC,GAAD,OAAO8D,EAAQ9D,EAAEC,OAAOrC,UAEtC,cAAC,KAAD,CACIA,MAAOyF,EACPtD,SAAU,SAACC,GAAD,OAAOsD,EAAWtD,EAAEC,OAAOrC,QACrC2G,OAAQ1D,EACR2D,gBAAiB,SAACf,GAAD,OApDpB,SAACA,GAClBH,EAAWG,EAAMgB,mBACjBjB,EAAe,CACXlC,IAAKmC,EAAMiB,SAAS1C,SAASV,MAC7BC,IAAKkC,EAAMiB,SAAS1C,SAAST,QAgDeoD,CAAalB,IACzCmB,QAAS,CACLC,MAAO,CAAC,WACRC,sBAAuB,CAAEC,QAAS,SAG1C,eAACV,GAAA,EAAKW,MAAN,CAAYC,QAAM,EAAlB,UACI,2CACA,cAACZ,GAAA,EAAKa,MAAN,CACIC,MAAM,OACNvH,MAAM,OACNwH,QAAkB,SAAT7H,EACTwC,SAAU,SAACC,GAAD,OAAOiE,EAAQ,WAE7B,cAACI,GAAA,EAAKa,MAAN,CACIC,MAAM,SACNvH,MAAM,SACNwH,QAAkB,WAAT7H,EACTwC,SAAU,kBAAMkE,EAAQ,gBAInB,WAAT1G,GACA,cAACsC,EAAA,EAAD,CACIC,YAAY,cACZlC,MAAOM,EACP6B,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOrC,UAG9C,cAACiC,EAAA,EAAD,CACItC,KAAK,SACLuC,YAAY,WACZlC,MAAOmG,EACPhE,SAAU,SAACC,GAAD,OAAOgE,EAAShE,EAAEC,OAAOrC,UAEvC,eAACyG,GAAA,EAAKW,MAAN,CAAYC,QAAM,EAAlB,UACI,mEACA,cAACZ,GAAA,EAAKa,MAAN,CACIC,MAAM,MACNvH,MAAO,IACPwH,QAAuB,MAAdlB,EACTnE,SAAU,SAACC,GAAD,OAAOmE,EAAa,QAElC,cAACE,GAAA,EAAKa,MAAN,CACIC,MAAM,IACNvH,MAAO,EACPwH,QAAuB,IAAdlB,EACTnE,SAAU,kBAAMoE,EAAa,iBAMjD,cAACsB,GAAA,EAAMG,QAAP,UACI,cAAC1F,EAAA,EAAD,CAAQ2F,MAAM,OAAO1F,QAlGZ,WACjB,OAAKxC,EAAgB,SAAUkG,IAEpBR,GAAWA,EAAQlF,OAAS,KAAOyD,EACnCpE,EAAS,iBACTuG,EAAQ,GAAKA,EAAQ,IACrBvG,EAAS,eACA,WAATD,GAAqBW,EAASC,OAAS,EACvCX,EAAS,eAEhBsI,EAAY/D,EAAME,IAAK,CACnB4B,OACAtG,OACAwG,QACAG,YACAb,UACAzB,cACA1D,SAAmB,WAATX,EAAoBW,EAAW,KAE7CV,GAAS,QACT+H,KAlBO/H,EAAS,sBAgGZ,4BCrEVa,GAAU,CACZ6H,YJfuB,SAAA9D,GAAE,8CAAI,WAAM3E,GAAN,eAAAnB,EAAA,sEACN0G,GAAoBZ,GADd,WACvB3F,EADuB,QAGf+B,QAHe,yCAIlBf,EAASD,EAASf,EAASkC,WAJT,OAO7BlB,EAASqF,GAAmBV,IAPC,2CAAJ,wDIwBdrD,gBAJS,SAAC,GAAD,MAAe,CACnCoH,QADoB,EAAGrH,KACTqH,YAHS,SAAA1I,GAAQ,OAAIuB,YAAmBX,GAASZ,KAMpDsB,EAhEG,SAAC,GAAgD,IAA9CgD,EAA6C,EAA7CA,MAAOoE,EAAsC,EAAtCA,QAAoBD,GAAkB,EAA7BE,UAA6B,EAAlBF,aAC5C,EAA8C5G,oBAAS,GAAvD,mBAAO+G,EAAP,KAAwBC,EAAxB,KACA,EAA8ChH,oBAAS,GAAvD,mBAAOiH,EAAP,KAAwBC,EAAxB,KAEA,OACI,sBAAK7G,UAAU,YAAf,UACI,cAAC,GAAD,CACI4F,MAAO,kBAAMe,GAAmB,IAChChB,KAAMe,EACNtF,KAAK,gBACLyE,UAAW,kBAAMU,EAAYnE,EAAME,QAEvC,cAAC,GAAD,CACIqD,KAAMiB,EACNhB,MAAO,kBAAMiB,GAAmB,IAChCzE,MAAOA,IAEX,gCACI,sBAAMpC,UAAU,QAAhB,oBADJ,IAC2CoC,EAAM8B,QAEjD,gCACI,sBAAMlE,UAAU,QAAhB,uBADJ,IAC8CoC,EAAMsB,WAEpD,gCACI,sBAAM1D,UAAU,QAAhB,oBADJ,IAC4CoC,EAAMxE,QAEjC,WAAfwE,EAAMxE,MACR,gCACI,sBAAMoC,UAAU,QAAhB,wBADJ,IACgDoC,EAAM7D,YAGtD,gCACI,sBAAMyB,UAAU,QAAhB,qBADJ,IAC4CoC,EAAMgC,SAElD,gCACI,sBAAMpE,UAAU,QAAhB,yBADJ,IACgDoC,EAAMmC,aAEpDiC,GACF,sBAAKxG,UAAU,UAAf,UACI,cAACO,EAAA,EAAD,CAAQ2F,MAAM,SAAS1F,QAAS,kBAAMqG,GAAmB,IAAzD,oBACA,cAACtG,EAAA,EAAD,CAAQ2F,MAAM,MAAM1F,QAAS,kBAAMmG,GAAmB,IAAtD,6BCpBDG,I,OAxBI,SAAC,GAGb,IAFHtF,EAEE,EAFFA,OAEE,IADFuF,iBACE,SACF,OACI,sBAAK/G,UAAU,aAAf,UACM+G,GAAa,+CACbvF,EAAOhD,OACHgD,EAAOW,KAAI,SAAAC,GAAK,OACd,cAAC,GAAD,CAEIA,MAAOA,GADFA,EAAME,QAGjB,qBAAKtC,UAAU,QAAf,6BC6BZtB,GAAU,CACZ0E,iBASWhE,gBAJS,SAAC,GAAD,MAAoB,CACxCoC,OADoB,EAAGwF,cAFA,SAAAlJ,GAAQ,OAAIuB,YAAmBX,GAASZ,KAMpDsB,EA7CF,SAAC,GAGP,IAFHoC,EAEE,EAFFA,OACA4B,EACE,EADFA,aAEA,EAA8BzD,oBAAS,GAAvC,mBAAOsH,EAAP,KAAgBC,EAAhB,KACA,EAAwCvH,oBAAS,GAAjD,mBAAO8B,EAAP,KAAqB0F,EAArB,KAOA,OALAC,qBAAU,WACNhE,IACKiE,SAAQ,kBAAMH,GAAW,QAC/B,IAECD,EACO,cAAC,EAAD,KAGXnI,QAAQC,IAAIyC,GAER,qBAAKxB,UAAU,OAAf,SACI,eAACC,EAAA,EAAD,CAAWD,UAAU,OAArB,UACI,cAAC,EAAD,CAAKwB,OAAQA,EAAQF,MAAM,MAAMC,OAAO,OAAOE,aAAcA,IAC7D,sBAAKzB,UAAU,aAAf,UACI,cAAC,GAAD,CAAauD,gBAAiB4D,IAC9B,cAAC,GAAD,CAAY3F,OAAQA,gBCmGlC9C,I,OAAU,CAAE4I,YPzGS,SAAA/E,GAAU,8CAAI,WAAMzE,GAAN,eAAAnB,EAAA,sEACd0G,GAAoBd,GADN,WAC/BzF,EAD+B,QAGvB+B,QAHuB,yCAI1Bf,EAASD,EAASf,EAASkC,WAJD,OAOrClB,GA3BgBjB,EA2BKC,EAASsF,MA3BL,CACzBxE,KAAMP,EACNR,UAkBqC,iCApBrB,IAAAA,IAoBqB,OAAJ,yDO6GtBuC,eACX,MAHuB,SAAAtB,GAAQ,OAAIuB,YAAmBX,GAASZ,KAEpDsB,EA/HK,SAAC,GAId,IAHHuG,EAGE,EAHFA,KACAC,EAEE,EAFFA,MACA0B,EACE,EADFA,YAEA,EAAwB3H,mBAAS,IAAjC,mBAAOuE,EAAP,KAAaC,EAAb,KACA,EAA0BxE,mBAAS,IAAnC,mBAAOmE,EAAP,KAAcC,EAAd,KACA,EAAwBpE,mBAAS,QAAjC,mBAAO/B,EAAP,KAAa0G,EAAb,KACA,EAAkC3E,mBAAS,KAA3C,mBAAO4E,EAAP,KAAkBC,EAAlB,KACA,EAA0B7E,mBAAS,GAAnC,mBAAOyE,EAAP,KAAcC,EAAd,KACA,EAAgC1E,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiBsB,EAAjB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOyG,EAAP,KAAcvI,EAAd,KA4BA,OACI,eAACiI,GAAA,EAAD,CACI9F,UAAU,cACV+F,QAASH,EACTD,KAAMA,EAHV,UAKI,cAACG,GAAA,EAAMO,OAAP,gCACA,cAACP,GAAA,EAAME,QAAP,UACI,eAACF,GAAA,EAAMQ,YAAP,WACMF,GAAS,qBAAKpG,UAAU,QAAf,SAAwBoG,IACnC,eAAC1B,GAAA,EAAD,WACI,cAACxE,EAAA,EAAD,CACIC,YAAY,UACZlC,MAAOiG,EACP9D,SAAU,SAACC,GAAD,OAAO8D,EAAQ9D,EAAEC,OAAOrC,UAEtC,cAAC,KAAD,CACI2G,OAAQ1D,EACR2D,gBAAiB,SAACf,GAAD,OAAWC,EAASD,IACrCmB,QAAS,CACLC,MAAO,CAAC,WACRC,sBAAuB,CAAEC,QAAS,SAG1C,eAACV,GAAA,EAAKW,MAAN,CAAYC,QAAM,EAAlB,UACI,2CACA,cAACZ,GAAA,EAAKa,MAAN,CACIC,MAAM,OACNvH,MAAM,OACNwH,QAAkB,SAAT7H,EACTwC,SAAU,SAACC,GAAD,OAAOiE,EAAQ,WAE7B,cAACI,GAAA,EAAKa,MAAN,CACIC,MAAM,SACNvH,MAAM,SACNwH,QAAkB,WAAT7H,EACTwC,SAAU,kBAAMkE,EAAQ,gBAInB,WAAT1G,GACA,cAACsC,EAAA,EAAD,CACIC,YAAY,cACZlC,MAAOM,EACP6B,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOrC,UAG9C,cAACiC,EAAA,EAAD,CACItC,KAAK,SACLuC,YAAY,WACZlC,MAAOmG,EACPhE,SAAU,SAACC,GAAD,OAAOgE,EAAShE,EAAEC,OAAOrC,UAEvC,eAACyG,GAAA,EAAKW,MAAN,CAAYC,QAAM,EAAlB,UACI,mEACA,cAACZ,GAAA,EAAKa,MAAN,CACIC,MAAM,MACNvH,MAAO,IACPwH,QAAuB,MAAdlB,EACTnE,SAAU,SAACC,GAAD,OAAOmE,EAAa,QAElC,cAACE,GAAA,EAAKa,MAAN,CACIC,MAAM,IACNvH,MAAO,EACPwH,QAAuB,IAAdlB,EACTnE,SAAU,kBAAMoE,EAAa,iBAMjD,cAACsB,GAAA,EAAMG,QAAP,UACI,cAAC1F,EAAA,EAAD,CAAQ2F,MAAM,OAAO1F,QAlGZ,WACjB,OAAKxC,EAAgB,SAAUkG,GAEpBJ,GAAUA,EAAMiB,SAAS1C,UAAayB,EAAMgB,kBAE5CV,EAAQ,GAAKA,EAAQ,IACrBvG,EAAS,eACA,WAATD,GAAqBW,EAASC,OAAS,EACvCX,EAAS,eAEhByJ,EAAY,CACRpD,OACAtG,OACAwG,QACAG,YACAtC,YAAa,CACTN,IAAKmC,EAAMiB,SAAS1C,SAASV,MAC7BC,IAAKkC,EAAMiB,SAAS1C,SAAST,OAEjC8B,QAASI,EAAMgB,oBAEnBjH,GAAS,QACT+H,KAlBO/H,EAAS,eAFTA,EAAS,sBAgGZ,4BCxEVa,I,OAAU,CAAE0E,kBAQHhE,gBAJS,SAAC,GAAD,MAAoB,CACzCoC,OADqB,EAAGwF,cAFA,SAAAlJ,GAAQ,OAAIuB,YAAmBX,GAASZ,KAMpDsB,EA/CA,SAAC,GAGT,IAFHoC,EAEE,EAFFA,OACA4B,EACE,EADFA,aAEA,EAA8BzD,oBAAS,GAAvC,mBAAOsH,EAAP,KAAgBC,EAAhB,KACA,EAA4CvH,oBAAS,GAArD,mBAAO4H,EAAP,KAAuBC,EAAvB,KAOA,OALAJ,qBAAU,WACNhE,IACKiE,SAAQ,kBAAMH,GAAW,QAC/B,IAECD,EACO,cAAC,EAAD,IAIP,sBAAKjH,UAAU,OAAf,UACMuH,GACF,cAAC,GAAD,CACI5B,KAAM4B,EACN3B,MAAO,kBAAM4B,GAAkB,MAEnC,eAACvH,EAAA,EAAD,CAAWD,UAAU,SAArB,UACI,+BACI,iDACA,cAACO,EAAA,EAAD,CAAQC,QAAS,kBAAMgH,GAAkB,IAAzC,0BAEJ,cAAC,GAAD,CAAYhG,OAAQA,EAAQuF,WAAW,aClC1CU,GAAe,CACxB,CACIC,KAAMC,EACNC,UAAWC,GAEf,CACIH,KAAMC,EACNC,UAAWC,GAEf,CACIH,KAAMC,EACNC,UAAWE,KAINC,GAAa,CACtB,CACIL,KAAMC,EACNC,UAAWI,KCMJ5I,gBAJS,SAAC,GAAD,MAAe,CACnC6I,OADoB,EAAG9I,KACV8I,UAGF7I,EAtBG,SAAC,GAAgB,IAAd6I,EAAa,EAAbA,OACjB,OACI,eAAC,IAAD,WACMA,GAAUF,GAAW5F,KAAI,gBAAEuF,EAAF,EAAEA,KAAME,EAAR,EAAQA,UAAR,OACvB,cAAC,IAAD,CAAkBF,KAAMA,EAAMQ,UAAWN,EAAWO,OAAK,GAA7CT,MAEfD,GAAatF,KAAI,gBAAEuF,EAAF,EAAEA,KAAME,EAAR,EAAQA,UAAR,OACd,cAAC,IAAD,CAAkBF,KAAMA,EAAMQ,UAAWN,EAAWO,OAAK,GAA7CT,MAEhB,cAAC,IAAD,CAAU9G,GAAInF,UCsBpBiD,I,OAAU,CAAE0J,OjBkBI,yDAAM,WAAMtK,GAAN,SAAAnB,EAAA,sDACxBJ,aAAa8L,WAAW,SACxBvK,EAxC0B,CAC3BF,KAAMR,IAqCmB,2CAAN,yDiBTPgC,gBALS,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAH,MAAe,CACnC8I,OAAQ9I,EAAK8I,OACbzB,QAASrH,EAAKqH,YAJS,SAAA1I,GAAQ,OAAIuB,YAAmBX,GAASZ,KAOpDsB,EAtCA,SAAC,GAAiD,IAA/C6I,EAA8C,EAA9CA,OAAQzB,EAAsC,EAAtCA,QAAS4B,EAA6B,EAA7BA,OAAQb,EAAqB,EAArBA,eACvC,OACI,yBAAQvH,UAAU,SAAlB,UACI,qBAAKA,UAAU,OAAf,SACI,6BAAI,cAAC,IAAD,CAAMY,GAAInF,EAAV,0BAER,qBAAKuE,UAAU,MAAf,SACMiI,EACM,sBAAKjI,UAAU,WAAf,UACEwG,EACI,cAAC,IAAD,CAAM5F,GAAIlF,EAAV,yBACA,cAAC,IAAD,CAAM8E,QAAS+G,EAAf,uBAEF,cAAC,IAAD,CAAM3G,GAAInF,EAAY+E,QAAS,kBAAM4H,KAArC,uBAEN,cAAC,IAAD,CAAMxH,GAAIrF,EAAV,2B,UCJP+M,I,OAfM,SAAC,GAAe,IAAblC,EAAY,EAAZA,MACpB,OACI,eAACmC,GAAA,EAAD,CAASvI,UAAU,eAAnB,UACI,cAACuI,GAAA,EAAQlC,OAAT,qBACA,4BACKD,EAAMpH,eCkCjBN,GAAU,CACZ8J,UnBAqB,yDAAM,WAAM1K,GAAN,eAAAnB,EAAA,sEACJiC,IADI,WACrB9B,EADqB,QAGb+B,QAHa,0CAIhB,GAJgB,OAO3BtC,aAAa0C,QAAQ,QAASnC,EAASoC,OACvCpB,GAxCkBjB,EAwCKC,EAASqC,KAxCL,CAC3BvB,KAAMT,EACNN,UA8B2B,iCAhCT,IAAAA,IAgCS,OAAN,wDmBWVuC,gBANS,SAAC,GAAD,IAAGgH,EAAH,EAAGA,MAAOjH,EAAV,EAAUA,KAAV,MAAsB,CAC1CiH,MAAOA,EACPI,QAASrH,EAAKqH,QACdyB,OAAQ9I,EAAK8I,WALU,SAAAnK,GAAQ,OAAIuB,YAAmBX,GAASZ,KAQpDsB,EA7CH,SAAC,GAKN,IAJHgH,EAIE,EAJFA,MACAoC,EAGE,EAHFA,UACAP,EAEE,EAFFA,OACAzB,EACE,EADFA,QAEA,EAA4C7G,oBAAS,GAArD,mBAAO4H,EAAP,KAAuBC,EAAvB,KAMA,OAJAJ,qBAAU,WACNoB,MACD,IAGH,eAAC,IAAD,WACMpC,EAAMqC,SAAW,cAAC,GAAD,CAAcrC,MAAOA,IACtC6B,IAAWzB,GACb,cAAC,GAAD,CACIb,KAAM4B,EACN3B,MAAO,kBAAM4B,GAAkB,MAEnC,cAAC,GAAD,CAAQD,eAAgB,kBAAMC,GAAkB,MAChD,cAAC,GAAD,U,mBC9BFkB,GAAe,CACjBD,SAAS,EACTzJ,QAAS,ICFP0J,GAAe,CACjBT,QAAQ,EACRpL,KAAM,GACN2J,SAAS,G,SCHPkC,GAAe,GCafC,GAAc,CAChBC,MAGEC,GAAoBC,YACtBC,IAAe,WAAf,EAAmBJ,KAGjBK,GAAW,CACb5C,MHjBW,WAAmC,IAAlC6C,EAAiC,uDAAzBP,GAAcQ,EAAW,uCAC7C,OAAQA,EAAOtL,MACX,KAAKH,EACD,MAAO,CAAEgL,SAAS,EAAMzJ,QAASkK,EAAOrM,MAC5C,KAAKa,EACD,OAAO,gBAAKgL,IAChB,QACI,OAAOO,IGWf9J,KFjBW,WAAmC,IAAlC8J,EAAiC,uDAAzBP,GAAcQ,EAAW,uCAC7C,OAAQA,EAAOtL,MACX,KAAKV,EACL,KAAKC,EACD,OAAO,6BAAK8L,GAAZ,IAAmBhB,QAAQ,EAAMpL,KAAMqM,EAAOrM,KAAM2J,QAA8B,UAArB0C,EAAOrM,KAAKsM,OAC7E,KAAK/L,EACD,OAAO,gBAAKsL,IAChB,QACI,OAAOO,IEUfjC,UDtBW,WAAmC,IAAlCiC,EAAiC,uDAAzBP,GAAcQ,EAAW,uCAC7C,OAAQA,EAAOtL,MACX,KAAKP,EACD,MAAM,GAAN,oBAAa4L,GAAb,CAAoBC,EAAOrM,OAC/B,KAAKS,EACD,OAAO,aAAK2L,EAAM9G,KAAI,SAAAC,GAAK,OAAIA,EAAME,MAAQ4G,EAAOrM,KAAKyF,IAA1B,gBACpB4G,EAAOrM,MACZuF,MAEV,KAAK7E,EACD,OAAO,aAAK0L,EAAMjG,QAAO,SAAAZ,GAAK,OAAIA,EAAME,MAAQ4G,EAAOzG,OAC3D,KAAKjF,EACD,OAAO,aAAK0L,EAAOrM,MACvB,QACI,OAAOoM,KCWbG,GAAcC,YAAgB,gBAAKL,KAEnCM,GAAQC,YACVH,GAnBiB,GAqBjBP,IAIJW,OAAOF,MAAQA,GAEAA,U,cChCfG,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,MAENK,SAASC,eAAe,W","file":"static/js/main.6ba5da86.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login';\r\nexport const REGISTRATION_ROUTE = '/register';\r\nexport const HOME_ROUTE = '/';\r\nexport const POINT_ROUTE = '/points'\r\n","import axios from \"axios\";\r\n\r\n// const apiUrl = 'http://localhost:8000/';  // dev\r\nconst apiUrl = 'http://localhost:46177/';\r\n\r\nconst $host = axios.create({\r\n    baseURL: apiUrl\r\n});\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: apiUrl\r\n});\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\r\n    return config;\r\n};\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport {\r\n    $host,\r\n    $authHost\r\n}\r\n","import {$host, $authHost} from './index';\r\n\r\nexport const registration = async (registrationData) => {\r\n    try {\r\n        const {data} = await $host.post('api/auth/register', registrationData);\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const login = async (loginData) => {\r\n    try {\r\n        const {data} = await $host.post('api/auth/login', loginData);\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const check = async () => {\r\n    try {\r\n        const {data} = await $authHost.post('api/auth/check');\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n","//  Auth\r\nexport const LOGIN = \"AUTH:LOGIN\";\r\nexport const REGISTER = \"AUTH:REGISTER\";\r\nexport const CHECK = \"AUTH:CHECK\";\r\nexport const LOGOUT = \"AUTH:LOGOUT\";\r\n\r\n//  WifiPoint\r\nexport const CREATE_POINT = \"WIFI:CREATE_POINT\";\r\nexport const UPDATE_POINT = \"WIFI:UPDATE_POINT\";\r\nexport const DELETE_POINT = \"WIFI:DELETE_POINT\";\r\nexport const GET_ALL_POINTS = \"WIFI:GET_ALL_POINTS\";\r\n\r\n//  Error\r\nexport const SET_ERROR = \"ERROR:SET_ERROR\";\r\nexport const REMOVE_ERROR = \"ERROR:REMOVE_ERROR\";\r\n","import {REMOVE_ERROR, SET_ERROR} from \"../utils/actionsConst\";\r\n\r\nconst showError = data => ({\r\n    type: SET_ERROR,\r\n    data\r\n});\r\n\r\nconst hideError = () => ({\r\n    type: REMOVE_ERROR\r\n});\r\n\r\nexport const setError = data => async dispatch => {\r\n    dispatch(showError(data));\r\n\r\n    setTimeout(() => {\r\n        dispatch(hideError())\r\n    }, 1500);\r\n};\r\n","export const inputValidation = (type, value) => {\r\n    return validationTypes[type](value);\r\n};\r\n\r\nconst validationTypes = {\r\n    'email': (email) => {\r\n        let re = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        return re.test(String(email).toLowerCase());\r\n    },\r\n    'password': (password) =>  {\r\n        return password.length > 4 && password.length < 20;\r\n    },\r\n    'string': (string) => {\r\n        return string.length > 2;\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Button, Container, Input} from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, useHistory, useLocation} from \"react-router-dom\";\r\nimport {HOME_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE} from \"../../utils/routesConst\";\r\nimport {registration, login} from \"../../actions/auth\";\r\nimport {setError} from \"../../actions/error\";\r\nimport {inputValidation} from \"../../helpers/inputValidation\";\r\nimport \"./styles.scss\";\r\n\r\n\r\nconst Auth = ({\r\n    registration,\r\n    login,\r\n    setError\r\n}) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const isLogin = location.pathname === LOGIN_ROUTE;\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPass, setConfirmPass] = useState('');\r\n\r\n    const handleClick = () => {\r\n        if (!inputValidation('email', email)) {\r\n            return setError('Email not valid!');\r\n        }\r\n\r\n        if (!inputValidation('password', password)) {\r\n            return setError('Password must be 4-20 sign!');\r\n        }\r\n\r\n        if (isLogin) {\r\n            login({ email, password })\r\n                .then(res => res && history.push(HOME_ROUTE));\r\n        } else {\r\n            if (password === confirmPass) {\r\n                registration({ email, password })\r\n                    .then(res => res && history.push(LOGIN_ROUTE));\r\n            } else {\r\n                setError('Password mismatch!');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Container className=\"Auth\">\r\n                <form>\r\n                    <h2>{isLogin ? 'Authorization' : 'Registration'}</h2>\r\n                    <Input\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                    />\r\n                    { isLogin ||\r\n                    <Input\r\n                        placeholder=\"Confirm password\"\r\n                        type=\"password\"\r\n                        value={confirmPass}\r\n                        onChange={e => setConfirmPass(e.target.value)}\r\n                    />\r\n                    }\r\n                    <Button type=\"button\" onClick={handleClick} >{isLogin ? 'Sign in' : 'Registration'}</Button>\r\n                </form>\r\n                <div className=\"redirect\">\r\n                    {isLogin ?\r\n                        <div>\r\n                            No account? <NavLink to={REGISTRATION_ROUTE}>Register!</NavLink>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            Already has an account? <NavLink to={LOGIN_ROUTE}>Sign in!</NavLink>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nAuth.propTypes = {\r\n    registration: PropTypes.func.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    setError: PropTypes.func.isRequired\r\n};\r\n\r\nconst actions = {\r\n    registration,\r\n    login,\r\n    setError\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Auth);\r\n","import * as authAPI from \"../http/authAPI\";\r\nimport {\r\n    LOGIN,\r\n    CHECK,\r\n    LOGOUT\r\n} from \"../utils/actionsConst\";\r\nimport {setError} from \"./error\";\r\n\r\nconst setUserData = data => ({\r\n   type: LOGIN,\r\n   data\r\n});\r\n\r\nconst checkUserAuth = data => ({\r\n    type: CHECK,\r\n    data\r\n});\r\n\r\nconst removeUserData = () => ({\r\n   type: LOGOUT\r\n});\r\n\r\nexport const registration = authData => async dispatch => {\r\n    const response = await authAPI.registration(authData);\r\n\r\n    if (!response.success) {\r\n        console.log(response)\r\n        return dispatch(setError(response.message));\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const login = authData => async dispatch => {\r\n    const response = await authAPI.login(authData);\r\n\r\n    if (!response.success) {\r\n        return dispatch(setError(response.message));\r\n    }\r\n\r\n    localStorage.setItem('token', response.token);\r\n    dispatch(setUserData(response.user));\r\n    return true;\r\n}\r\n\r\nexport const checkAuth = () => async dispatch => {\r\n    const response = await authAPI.check();\r\n\r\n    if (!response.success) {\r\n        return false;\r\n    }\r\n\r\n    localStorage.setItem('token', response.token);\r\n    dispatch(checkUserAuth(response.user));\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    localStorage.removeItem('token');\r\n    dispatch(removeUserData());\r\n};\r\n","import React from 'react';\r\nimport {Dimmer, Loader, Segment} from \"semantic-ui-react\";\r\nimport './styles.scss';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <Segment className=\"Preloader\">\r\n            <Dimmer active>\r\n                <Loader />\r\n            </Dimmer>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","export const API_KEY = \"AIzaSyCEuOy321bF_4zNmj8Ai4HbT2cEaRpe_2E\";\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Marker = ({ className, text }) => {\r\n    return (\r\n        <div className={className ? `Marker ${className}` : \"Marker\"} />\r\n    );\r\n};\r\n\r\nMarker.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Marker;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport {API_KEY} from \"../../googleKey\";\r\nimport Marker from \"./Marker\";\r\nimport './styles.scss';\r\n\r\nconst Map = ({\r\n    width,\r\n    height,\r\n    points,\r\n    filterRadius\r\n}) => {\r\n    const center = {\r\n        lat: 48.6208,\r\n        lng: 22.287883\r\n    };\r\n    const zoom = 14;\r\n    console.log(filterRadius)\r\n    return (\r\n        <div className=\"Map\" style={{ height: height, width: width }}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: API_KEY }}\r\n                defaultCenter={center}\r\n                center={filterRadius ? filterRadius.coordinates : center}\r\n                defaultZoom={zoom}\r\n            >\r\n                { points.length &&\r\n                    points.map(point =>\r\n                        <Marker\r\n                            key={point._id}\r\n                            lat={point.location.coordinates[0]}\r\n                            lng={point.location.coordinates[1]}\r\n                        />\r\n                    )\r\n                }\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n\r\nMap.propTypes = {\r\n    points: PropTypes.array.isRequired,\r\n    width: PropTypes.string.isRequired,\r\n    height: PropTypes.string.isRequired,\r\n    filterRadius: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.object\r\n    ]).isRequired,\r\n};\r\n\r\nexport default Map;\r\n","import {$host, $authHost} from './index';\r\n\r\nexport const create = async (createData) => {\r\n    try {\r\n        const {data} = await $authHost.post('api/wifi', createData);\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const update = async (id, updateData) => {\r\n    try {\r\n        const {data} = await $authHost.put(`api/wifi/${id}`, updateData);\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const remove = async (id) => {\r\n    try {\r\n        const {data} = await $authHost.delete(`api/wifi/${id}`);\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const getAll = async () => {\r\n    try {\r\n        const {data} = await $host.get('api/wifi');\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n\r\nexport const filter = async filterData => {\r\n    try {\r\n        const {data} = await $host.post('api/wifi/filter', filterData);\r\n        return data;\r\n    } catch (e) {\r\n        const {data} = e.response;\r\n        return data;\r\n    }\r\n};\r\n","import * as wifiPointAPI from \"../http/wifiPointAPI\";\r\nimport {\r\n    CREATE_POINT,\r\n    UPDATE_POINT,\r\n    DELETE_POINT,\r\n    GET_ALL_POINTS\r\n} from \"../utils/actionsConst\";\r\nimport {setError} from \"./error\";\r\n\r\nconst setNewPoint = data => ({\r\n    type: CREATE_POINT,\r\n    data\r\n});\r\n\r\nconst setUpdatedPoint = data => ({\r\n    type: UPDATE_POINT,\r\n    data\r\n});\r\n\r\nconst setAllPoints = data => ({\r\n    type: GET_ALL_POINTS,\r\n    data\r\n});\r\n\r\nconst removeDeletedPoint = id => ({\r\n    type: DELETE_POINT,\r\n    id\r\n});\r\n\r\nexport const createPoint = createData => async dispatch => {\r\n    const response = await wifiPointAPI.create(createData);\r\n\r\n    if (!response.success) {\r\n        return dispatch(setError(response.message));\r\n    }\r\n\r\n    dispatch(setNewPoint(response.point));\r\n}\r\n\r\nexport const updatePoint = (id, updateData) => async dispatch => {\r\n    const response = await wifiPointAPI.update(id, updateData);\r\n\r\n    if (!response.success) {\r\n        return dispatch(setError(response.message));\r\n    }\r\n\r\n    dispatch(setUpdatedPoint(response.point));\r\n}\r\n\r\nexport const deletePoint = id => async dispatch => {\r\n    const response = await wifiPointAPI.remove(id);\r\n\r\n    if (!response.success) {\r\n        return dispatch(setError(response.message));\r\n    }\r\n\r\n    dispatch(removeDeletedPoint(id));\r\n}\r\n\r\nexport const getAllPoints = () => async dispatch => {\r\n    const response = await wifiPointAPI.getAll();\r\n\r\n    if (!response.success) {\r\n        return dispatch(setError(response.message));\r\n    }\r\n\r\n    dispatch(setAllPoints(response.points));\r\n}\r\n\r\nexport const filterPoints = filterData => async dispatch => {\r\n    const response = await wifiPointAPI.filter(filterData);\r\n\r\n    if (!response.success) {\r\n        return dispatch(setError(response.message));\r\n    }\r\n\r\n    dispatch(setAllPoints(response.points));\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Button, Form, Icon, Input} from \"semantic-ui-react\";\r\nimport AutoComplete from \"react-google-autocomplete\";\r\nimport {API_KEY} from \"../../googleKey\";\r\nimport {filterPoints, getAllPoints} from \"../../actions/wifiPoints\";\r\nimport {setError} from \"../../actions/error\";\r\nimport \"./styles.scss\";\r\n\r\nconst PointFilter = ({\r\n    filterPoints,\r\n    setError,\r\n    getAllPoints,\r\n    setFilterMarker\r\n}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [address, setAddress] = useState('');\r\n    const [coordinates, setCoordinates] = useState(undefined);\r\n    const [place, setPlace] = useState('');\r\n    const [radius, setRadius] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [speed, setSpeed] = useState('');\r\n    const [type, setType] = useState('all');\r\n    const [frequency, setFrequency] = useState('all');\r\n\r\n    const changeAddress = (address) =>  {\r\n      setPlace('');\r\n      setAddress(address);\r\n    };\r\n\r\n    const placeHandler = (place) => {\r\n        if (!place.formatted_address) {\r\n            return setError('Undefined place');\r\n        }\r\n        setPlace(place);\r\n        setAddress(place.formatted_address);\r\n        setCoordinates({\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng()\r\n        });\r\n    };\r\n\r\n    const handleFilter = () => {\r\n        const filter = {\r\n            radius,\r\n            name,\r\n            speed,\r\n            type: type !== 'all' ? type : '',\r\n            frequency: frequency !== 'all' ? frequency : ''\r\n        };\r\n\r\n        if (address && !place.formatted_address) {\r\n            return setError('Undefined place');\r\n        }\r\n\r\n        if (speed < 0 || speed > 500) {\r\n            return setError('bad speed!');\r\n        }\r\n\r\n        if (place.formatted_address) {\r\n           filter.coordinates = coordinates;\r\n        }\r\n\r\n        setFilterMarker({ coordinates, radius });\r\n        filterPoints(filter);\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        setAddress('');\r\n        setCoordinates(undefined);\r\n        setPlace('');\r\n        setRadius('');\r\n        setName('');\r\n        setType('all');\r\n        setFrequency('all');\r\n\r\n        getAllPoints();\r\n        setFilterMarker(false);\r\n        setIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"PointFilter\">\r\n            <h2 onClick={() => setIsOpen(!isOpen)}>\r\n                <span>Filter</span>\r\n                <Icon name={isOpen ? \"angle up\" : \"angle down\"} />\r\n            </h2>\r\n            { isOpen &&\r\n            <Form>\r\n                <div>\r\n                    <AutoComplete\r\n                        value={address}\r\n                        onChange={(e) => changeAddress(e.target.value)}\r\n                        apiKey={API_KEY}\r\n                        onPlaceSelected={(place) => placeHandler(place)}\r\n                        options={{\r\n                            types: [\"address\"],\r\n                            componentRestrictions: { country: \"ua\" },\r\n                        }}\r\n                    />\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Radius (m)...\"\r\n                        value={radius}\r\n                        onChange={(e) => setRadius(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Input\r\n                        placeholder=\"Name...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Speed...\"\r\n                        value={speed}\r\n                        onChange={(e) => setSpeed(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Form.Group inline>\r\n                        <label>Type: </label>\r\n                        <Form.Radio\r\n                            label='All'\r\n                            value='all'\r\n                            checked={type === 'all'}\r\n                            onChange={(e) => setType('all')}\r\n                        />\r\n                        <Form.Radio\r\n                            label='Open'\r\n                            value='open'\r\n                            checked={type === 'open'}\r\n                            onChange={(e) => setType('open')}\r\n                        />\r\n                        <Form.Radio\r\n                            label='Secure'\r\n                            value='secure'\r\n                            checked={type === 'secure'}\r\n                            onChange={() => setType('secure')}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group inline>\r\n                        <label>Frequency (ГГц)</label>\r\n                        <Form.Radio\r\n                            label='All'\r\n                            value='all'\r\n                            checked={type === 'all'}\r\n                            onChange={(e) => setType('all')}\r\n                        />\r\n                        <Form.Radio\r\n                            label='2.4'\r\n                            value={2.4}\r\n                            checked={frequency === 2.4}\r\n                            onChange={(e) => setFrequency(2.4)}\r\n                        />\r\n                        <Form.Radio\r\n                            label='5'\r\n                            value={5}\r\n                            checked={frequency === 5}\r\n                            onChange={() => setFrequency(5)}\r\n                        />\r\n                    </Form.Group>\r\n                </div>\r\n                <div>\r\n                    <Button type=\"button\" className=\"filter\" onClick={handleFilter}>Filter</Button>\r\n                    <Button type=\"button\" className=\"clear\" onClick={clearFilter}>Clear</Button>\r\n                </div>\r\n            </Form>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nPointFilter.propTypes = {\r\n    filterPoints: PropTypes.func.isRequired,\r\n    setError: PropTypes.func.isRequired,\r\n    getAllPoints: PropTypes.func.isRequired,\r\n    setFilterMarker: PropTypes.func.isRequired,\r\n};\r\n\r\nconst actions = { filterPoints, setError, getAllPoints };\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(PointFilter);\r\n","import React from 'react';\r\nimport {Button, Icon, Modal} from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./styles.scss\";\r\n\r\nconst ConfirmModal = ({\r\n    open,\r\n    close,\r\n    text,\r\n    confirmCb\r\n}) => {\r\n    const handleConfirm = () => {\r\n        confirmCb();\r\n        close();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            className=\"ConfirmModal\"\r\n            open={open}\r\n            onClose={close}\r\n        >\r\n            <Modal.Content>\r\n                <Icon name=\"warning sign\" />\r\n                <h3>{text}</h3>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color=\"green\" onClick={handleConfirm}>Yes</Button>\r\n                <Button color=\"red\" onClick={close}>No</Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nConfirmModal.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    close: PropTypes.func.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    confirmCb: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, {useState} from 'react';\r\nimport {Button, Form, Input, Modal} from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {updatePoint} from \"../../../actions/wifiPoints\";\r\nimport AutoComplete from \"react-google-autocomplete\";\r\nimport {API_KEY} from \"../../../googleKey\"\r\nimport \"./styles.scss\";\r\nimport {inputValidation} from \"../../../helpers/inputValidation\";\r\n\r\nconst UpdatePoint = ({\r\n    open,\r\n    close,\r\n    point,\r\n    updatePoint\r\n}) => {\r\n    const [name, setName] = useState(point.name);\r\n    const [coordinates, setCoordinates] = useState(point.coordinates);\r\n    const [address, setAddress] = useState(point.address);\r\n    const [type, setType] = useState(point.type);\r\n    const [password, setPassword] = useState(point.password);\r\n    const [speed, setSpeed] = useState(point.speed);\r\n    const [frequency, setFrequency] = useState(point.frequency);\r\n    const [error, setError] = useState(false);\r\n\r\n    const placeHandler = (place) => {\r\n        setAddress(place.formatted_address);\r\n        setCoordinates({\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng()\r\n        });\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        if (!inputValidation('string', name)) {\r\n            return setError('Name min length 3');\r\n        }else if (!address || address.length < 10 || !coordinates) {\r\n            return setError('Address error');\r\n        } else if (speed < 0 || speed > 500) {\r\n            return setError(\"Speed error\");\r\n        } else if (type === \"secure\" && password.length < 8) {\r\n            return setError(\"min pass 8\");\r\n        } else {\r\n            updatePoint(point._id, {\r\n                name,\r\n                type,\r\n                speed,\r\n                frequency,\r\n                address,\r\n                coordinates,\r\n                password: type === \"secure\" ? password : \"\"\r\n            });\r\n            setError(false);\r\n            close();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            className=\"UpdatePoint\"\r\n            onClose={close}\r\n            open={open}\r\n        >\r\n            <Modal.Header>Update point:</Modal.Header>\r\n            <Modal.Content>\r\n                <Modal.Description>\r\n                    { error && <div className=\"error\">{error}</div>}\r\n                    <Form>\r\n                        <Input\r\n                            placeholder=\"Name...\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <AutoComplete\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                            apiKey={API_KEY}\r\n                            onPlaceSelected={(place) => placeHandler(place)}\r\n                            options={{\r\n                                types: [\"address\"],\r\n                                componentRestrictions: { country: \"ua\" },\r\n                            }}\r\n                        />\r\n                        <Form.Group inline>\r\n                            <label>Type: </label>\r\n                            <Form.Radio\r\n                                label='Open'\r\n                                value='open'\r\n                                checked={type === 'open'}\r\n                                onChange={(e) => setType('open')}\r\n                            />\r\n                            <Form.Radio\r\n                                label='Secure'\r\n                                value='secure'\r\n                                checked={type === 'secure'}\r\n                                onChange={() => setType('secure')}\r\n                            />\r\n                        </Form.Group>\r\n                        {\r\n                            type === \"secure\" &&\r\n                            <Input\r\n                                placeholder=\"Password...\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        }\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder=\"Speed...\"\r\n                            value={speed}\r\n                            onChange={(e) => setSpeed(e.target.value)}\r\n                        />\r\n                        <Form.Group inline>\r\n                            <label>Frequency (ГГц)</label>\r\n                            <Form.Radio\r\n                                label='2.4'\r\n                                value={2.4}\r\n                                checked={frequency === 2.4}\r\n                                onChange={(e) => setFrequency(2.4)}\r\n                            />\r\n                            <Form.Radio\r\n                                label='5'\r\n                                value={5}\r\n                                checked={frequency === 5}\r\n                                onChange={() => setFrequency(5)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color=\"teal\" onClick={handleUpdate} >Update</Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nUpdatePoint.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    close: PropTypes.func.isRequired,\r\n    point: PropTypes.object.isRequired,\r\n    updatePoint: PropTypes.func.isRequired\r\n};\r\n\r\nconst actions = { updatePoint };\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(UpdatePoint);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Button} from \"semantic-ui-react\";\r\nimport ConfirmModal from \"../Modals/ConfirmModal\";\r\nimport UpdatePoint from \"../Modals/UpdatePoint\";\r\nimport {deletePoint} from \"../../actions/wifiPoints\";\r\n\r\nconst PointItem = ({ point, isAdmin, editPoint, deletePoint }) => {\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n    const [openUpdateModal, setOpenUpdateModal] = useState(false);\r\n\r\n    return (\r\n        <div className=\"PointItem\">\r\n            <ConfirmModal\r\n                close={() => setOpenDeleteModal(false)}\r\n                open={openDeleteModal}\r\n                text=\"Are you sure?\"\r\n                confirmCb={() => deletePoint(point._id)}\r\n            />\r\n            <UpdatePoint\r\n                open={openUpdateModal}\r\n                close={() => setOpenUpdateModal(false)}\r\n                point={point}\r\n            />\r\n            <div>\r\n                <span className=\"label\">Name: </span> {point.name}\r\n            </div>\r\n            <div>\r\n                <span className=\"label\">Address: </span> {point.address}\r\n            </div>\r\n            <div>\r\n                <span className=\"label\">Type: </span> { point.type }\r\n            </div>\r\n            { point.type === 'secure' &&\r\n            <div>\r\n                <span className=\"label\">Password: </span> { point.password }\r\n            </div>\r\n            }\r\n            <div>\r\n                <span className=\"label\">Speed: </span> {point.speed}\r\n            </div>\r\n            <div>\r\n                <span className=\"label\">Frequency: </span> {point.frequency}\r\n            </div>\r\n            { isAdmin &&\r\n            <div className=\"actions\">\r\n                <Button color=\"yellow\" onClick={() => setOpenUpdateModal(true)}>Update</Button>\r\n                <Button color=\"red\" onClick={() => setOpenDeleteModal(true)}>Delete</Button>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nPointItem.propTypes = {\r\n    point: PropTypes.object.isRequired,\r\n    isAdmin: PropTypes.bool.isRequired,\r\n    editPoint: PropTypes.func.isRequired,\r\n    deletePoint: PropTypes.func.isRequired\r\n}\r\n\r\nconst actions = {\r\n    deletePoint\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n    isAdmin: user.isAdmin\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PointItem);\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport PointItem from \"./PointItem\";\r\nimport \"./styles.scss\";\r\n\r\nconst PointsList = ({\r\n    points,\r\n    withLabel = true\r\n}) => {\r\n    return (\r\n        <div className=\"PointsList\">\r\n            { withLabel && <h2>Wifi Points: </h2> }\r\n            { points.length\r\n                ? points.map(point =>\r\n                    <PointItem\r\n                        key={point._id}\r\n                        point={point}\r\n                    />)\r\n                : <div className=\"empty\">No points!</div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nPointsList.propTypes = {\r\n    withLabel: PropTypes.bool,\r\n    points: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PointsList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {Container} from \"semantic-ui-react\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport Preloader from \"../../components/Preloader\";\r\nimport Map from \"../../components/Map\";\r\nimport PointFilter from \"../../components/PointFilter\";\r\nimport {getAllPoints} from \"../../actions/wifiPoints\";\r\nimport \"./styes.scss\";\r\nimport PointsList from \"../../components/PointsList\";\r\n\r\nconst Home = ({\r\n    points,\r\n    getAllPoints\r\n}) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [filterRadius, setFilterRadius] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllPoints()\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    console.log(points);\r\n    return (\r\n        <div className=\"page\">\r\n            <Container className=\"Home\">\r\n                <Map points={points} width=\"50%\" height=\"100%\" filterRadius={filterRadius} />\r\n                <div className=\"rightBlock\">\r\n                    <PointFilter setFilterMarker={setFilterRadius} />\r\n                    <PointsList points={points} />\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    points: PropTypes.array.isRequired,\r\n    getAllPoints: PropTypes.func.isRequired\r\n};\r\n\r\nconst actions = {\r\n    getAllPoints\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nconst mapStateToProps = ({ wifiPoint }) => ({\r\n    points: wifiPoint\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home);\r\n","import React, {useState} from 'react';\r\nimport {Button, Form, Input, Modal} from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {createPoint} from \"../../../actions/wifiPoints\";\r\nimport AutoComplete from \"react-google-autocomplete\";\r\nimport {inputValidation} from \"../../../helpers/inputValidation\";\r\nimport {API_KEY} from \"../../../googleKey\";\r\nimport \"./styles.scss\";\r\n\r\nconst CreatePoint = ({\r\n    open,\r\n    close,\r\n    createPoint,\r\n}) => {\r\n    const [name, setName] = useState('');\r\n    const [place, setPlace] = useState('');\r\n    const [type, setType] = useState('open');\r\n    const [frequency, setFrequency] = useState(2.4);\r\n    const [speed, setSpeed] = useState(0);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleCreate = () => {\r\n        if (!inputValidation('string', name)) {\r\n            return setError('Name min length 3');\r\n        }else if (!place || !place.geometry.location || !place.formatted_address) {\r\n            return setError('Place error');\r\n        } else if (speed < 0 || speed > 500) {\r\n            return setError(\"Speed error\");\r\n        } else if (type === \"secure\" && password.length < 8) {\r\n            return setError(\"min pass 8\");\r\n        } else {\r\n            createPoint({\r\n                name,\r\n                type,\r\n                speed,\r\n                frequency,\r\n                coordinates: {\r\n                    lat: place.geometry.location.lat(),\r\n                    lng: place.geometry.location.lng()\r\n                },\r\n                address: place.formatted_address\r\n            });\r\n            setError(false);\r\n            close();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            className=\"CreatePoint\"\r\n            onClose={close}\r\n            open={open}\r\n        >\r\n            <Modal.Header>Create new point:</Modal.Header>\r\n            <Modal.Content>\r\n                <Modal.Description>\r\n                    { error && <div className=\"error\">{error}</div>}\r\n                    <Form>\r\n                        <Input\r\n                            placeholder=\"Name...\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <AutoComplete\r\n                            apiKey={API_KEY}\r\n                            onPlaceSelected={(place) => setPlace(place)}\r\n                            options={{\r\n                                types: [\"address\"],\r\n                                componentRestrictions: { country: \"ua\" },\r\n                            }}\r\n                        />\r\n                        <Form.Group inline>\r\n                            <label>Type: </label>\r\n                            <Form.Radio\r\n                                label='Open'\r\n                                value='open'\r\n                                checked={type === 'open'}\r\n                                onChange={(e) => setType('open')}\r\n                            />\r\n                            <Form.Radio\r\n                                label='Secure'\r\n                                value='secure'\r\n                                checked={type === 'secure'}\r\n                                onChange={() => setType('secure')}\r\n                            />\r\n                        </Form.Group>\r\n                        {\r\n                            type === \"secure\" &&\r\n                            <Input\r\n                                placeholder=\"Password...\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        }\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder=\"Speed...\"\r\n                            value={speed}\r\n                            onChange={(e) => setSpeed(e.target.value)}\r\n                        />\r\n                        <Form.Group inline>\r\n                            <label>Frequency (ГГц)</label>\r\n                            <Form.Radio\r\n                                label='2.4'\r\n                                value={2.4}\r\n                                checked={frequency === 2.4}\r\n                                onChange={(e) => setFrequency(2.4)}\r\n                            />\r\n                            <Form.Radio\r\n                                label='5'\r\n                                value={5}\r\n                                checked={frequency === 5}\r\n                                onChange={() => setFrequency(5)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color=\"teal\" onClick={handleCreate} >Create</Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nCreatePoint.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    close: PropTypes.func.isRequired,\r\n    createPoint: PropTypes.func.isRequired,\r\n};\r\n\r\nconst actions = { createPoint };\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(CreatePoint);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Container} from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport CreatePoint from \"../../components/Modals/CreatePoint\";\r\nimport Preloader from \"../../components/Preloader\";\r\nimport PointsList from \"../../components/PointsList\";\r\nimport {getAllPoints} from \"../../actions/wifiPoints\";\r\nimport \"./styles.scss\";\r\n\r\nconst Points = ({\r\n    points,\r\n    getAllPoints\r\n}) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [openCreateForm, setOpenCreateForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getAllPoints()\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Preloader/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            { openCreateForm &&\r\n            <CreatePoint\r\n                open={openCreateForm}\r\n                close={() => setOpenCreateForm(false)}\r\n            /> }\r\n            <Container className=\"Points\">\r\n                <h2>\r\n                    <span>Wifi points: </span>\r\n                    <Button onClick={() => setOpenCreateForm(true)} >Add point</Button>\r\n                </h2>\r\n                <PointsList points={points} withLabel={false}/>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nPoints.propTypes = {\r\n    points: PropTypes.array.isRequired,\r\n    getAllPoints: PropTypes.func.isRequired\r\n};\r\n\r\nconst actions = { getAllPoints };\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nconst mapStateToProps = ({ wifiPoint }) => ({\r\n   points: wifiPoint\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Points);\r\n","import * as ROUTE from \"./utils/routesConst\";\r\nimport Auth from \"./pages/Auth\";\r\nimport Home from \"./pages/Home\";\r\nimport Points from \"./pages/Points\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: ROUTE.LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: ROUTE.REGISTRATION_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: ROUTE.HOME_ROUTE,\r\n        Component: Home\r\n    },\r\n];\r\n\r\nexport const authRoutes = [\r\n    {\r\n        path: ROUTE.POINT_ROUTE,\r\n        Component: Points\r\n    },\r\n];\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { publicRoutes, authRoutes } from \"../routes\";\r\nimport {HOME_ROUTE} from \"../utils/routesConst\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AppRouter = ({ isAuth }) => {\r\n    return (\r\n        <Switch>\r\n            { isAuth && authRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact/>\r\n            )}\r\n            <Redirect to={HOME_ROUTE} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nAppRouter.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n    isAuth: user.isAuth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(AppRouter);\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {HOME_ROUTE, LOGIN_ROUTE, POINT_ROUTE} from \"../../utils/routesConst\";\r\nimport {logout} from \"../../actions/auth\";\r\nimport \"./styles.scss\";\r\n\r\nconst Header = ({ isAuth, isAdmin, logout, openCreateForm }) => {\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"logo\">\r\n                <h1><Link to={HOME_ROUTE} >WiFi Map</Link></h1>\r\n            </div>\r\n            <div className=\"nav\">\r\n                { isAuth\r\n                    ?   <div className=\"nav_list\">\r\n                        { isAdmin\r\n                            ? <Link to={POINT_ROUTE}>Wifi points</Link>\r\n                            : <Link onClick={openCreateForm}>Add Point</Link>\r\n                        }\r\n                            <Link to={HOME_ROUTE} onClick={() => logout()}>Logout</Link>\r\n                        </div>\r\n                    : <Link to={LOGIN_ROUTE}>Login</Link>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    isAdmin: PropTypes.bool.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    openCreateForm: PropTypes.func.isRequired\r\n};\r\n\r\nconst actions = { logout };\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n    isAuth: user.isAuth,\r\n    isAdmin: user.isAdmin\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport {Message} from \"semantic-ui-react\";\r\nimport PropTypes from 'prop-types';\r\nimport './styles.scss';\r\n\r\nconst ErrorMessage = ({ error }) => {\r\n    return (\r\n        <Message className=\"ErrorMessage\">\r\n            <Message.Header>Error!</Message.Header>\r\n            <p>\r\n                {error.message}\r\n            </p>\r\n        </Message>\r\n    );\r\n};\r\n\r\nErrorMessage.propTypes = {\r\n    error: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Header from \"./components/Header\";\nimport ErrorMessage from \"./components/ErrorMessage\";\nimport CreatePoint from \"./components/Modals/CreatePoint\";\nimport {checkAuth} from \"./actions/auth\";\n\nconst App = ({\n    error,\n    checkAuth,\n    isAuth,\n    isAdmin\n}) => {\n    const [openCreateForm, setOpenCreateForm] = useState(false);\n\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    return (\n    <BrowserRouter>\n        { error.isError && <ErrorMessage error={error} /> }\n        { isAuth && !isAdmin &&\n        <CreatePoint\n            open={openCreateForm}\n            close={() => setOpenCreateForm(false)}\n        /> }\n        <Header openCreateForm={() => setOpenCreateForm(true)} />\n        <AppRouter />\n    </BrowserRouter>\n    );\n}\n\nApp.propTypes = {\n    checkAuth: PropTypes.func.isRequired,\n    error: PropTypes.object.isRequired,\n    isAuth: PropTypes.bool.isRequired,\n    isAdmin: PropTypes.bool.isRequired\n};\n\nconst actions = {\n    checkAuth\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actions, dispatch);\n\nconst mapStateToProps = ({ error, user }) => ({\n    error: error,\n    isAdmin: user.isAdmin,\n    isAuth: user.isAuth\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {REMOVE_ERROR, SET_ERROR} from '../utils/actionsConst';\r\n\r\nconst defaultState = {\r\n    isError: false,\r\n    message: ''\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERROR:\r\n            return { isError: true, message: action.data };\r\n        case REMOVE_ERROR:\r\n            return { ...defaultState };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {LOGIN, CHECK, LOGOUT} from '../utils/actionsConst';\r\n\r\nconst defaultState = {\r\n    isAuth: false,\r\n    data: {},\r\n    isAdmin: false\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n        case CHECK:\r\n            return { ...state, isAuth: true, data: action.data, isAdmin: action.data.role === \"admin\" }\r\n        case LOGOUT:\r\n            return { ...defaultState };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {CREATE_POINT, UPDATE_POINT, DELETE_POINT, GET_ALL_POINTS} from '../utils/actionsConst';\r\n\r\nconst defaultState = [];\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POINT:\r\n            return [ ... state, action.data ];\r\n        case UPDATE_POINT:\r\n            return [ ...state.map(point => point._id === action.data._id\r\n                ? { ...action.data }\r\n                : point\r\n            )];\r\n        case DELETE_POINT:\r\n            return [ ...state.filter(point => point._id !== action.id)];\r\n        case GET_ALL_POINTS:\r\n            return [ ...action.data ];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    createStore,\r\n    combineReducers,\r\n    compose,\r\n    applyMiddleware\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport error from './reducers/error';\r\nimport user from './reducers/user';\r\nimport wifiPoint from './reducers/wifiPoint';\r\n\r\n\r\nconst initialState = {};\r\n\r\nconst middlewares = [\r\n    thunk\r\n];\r\n\r\nconst composedEnhancers = compose(\r\n    applyMiddleware(...middlewares)\r\n);\r\n\r\nconst reducers = {\r\n    error,\r\n    user,\r\n    wifiPoint,\r\n};\r\n\r\nconst rootReducer = combineReducers({ ...reducers });\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composedEnhancers\r\n);\r\n\r\n//for development\r\nwindow.store = store;\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./index.scss\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}